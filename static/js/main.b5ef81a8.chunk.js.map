{"version":3,"sources":["components/CardPlanet.jsx","components/Button.jsx","components/LoadingSpinner.jsx","components/Planet.jsx","index.js"],"names":["CardPlanet","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","planet","console","log","react_default","a","createElement","map","plan","key","name","className","population","climate","terrain","films","length","Component","Button","onClick","next","LoadSpinner","Planet","getPlanets","asyncToGenerator","regenerator_default","mark","_callee","url","arrayPlanets","response","i","wrap","_context","prev","setState","loading","Axios","get","sent","data","results","push","planets","numPlanets","count","cardPlanet","t0","stop","selectedIndex","Math","floor","random","filter","result","index","arr","indexOf","checkLoading","LoadingSpinner","CardPlanet_CardPlanet","Button_Button","document","title","elemento","getElementById","ReactDOM","render","Planet_Planet"],"mappings":"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","file":"static/js/main.b5ef81a8.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport '../css/starwars.css'\r\nimport '../index.css'\r\n\r\nexport default class CardPlanet extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            planet: []\r\n        }\r\n    }\r\n render(){\r\n    const planet = this.props.planet\r\n     console.log(planet)\r\n     return(\r\n         <div>\r\n             { planet.map(plan => (\r\n                 <div key={plan.name}>\r\n                     <div className=\"text-center mb-1 pb-1\">\r\n                         <p className=\"h1 title\">Star Wars Planets</p>\r\n                     </div>\r\n                     <div className=\"card border-warning rounded\">\r\n                         <div className=\"card-header\">\r\n                             <p className=\"h3\">{plan.name}</p>\r\n                         </div>\r\n                         <div className=\"card-body\">\r\n                             <h4 className=\"ui sub header\">Population: {plan.population}</h4>\r\n                             <h4 className=\"ui sub header\">Climate: {plan.climate}</h4>\r\n                             <h4 className=\"ui sub header\">Terrain: {plan.terrain}</h4>\r\n                             <h4 className=\"ui sub header\">Featured in {plan.films.length} films</h4>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             ))}\r\n         </div>\r\n     )\r\n }\r\n\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class Button extends Component {\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"text-center mt-3 pt-3\">\r\n                <button className=\"btn btn-outline-warning\" onClick={() => this.props.next()}>\r\n                    Next\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport '../css/starwars.css'\r\n\r\n    const LoadSpinner = () => (\r\n        <div className=\"text-center spinner\">\r\n            <div className=\"lds-dual-ring\"></div>\r\n            <p>Loading Planets...</p>\r\n        </div>\r\n    );\r\n\r\nexport default LoadSpinner;","import React, { Component } from 'react'\r\nimport Axios from \"axios\";\r\nimport CardPlanet from './CardPlanet'\r\nimport Button from './Button'\r\nimport LoadSpinner from './LoadingSpinner'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport '../css/starwars.css'\r\nimport '../index.css'\r\n\r\nexport default class Planet extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            planet: [],\r\n            planets: [],\r\n            numPlanets: 0,\r\n            selectedIndex: 0,\r\n            loading: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getPlanets()\r\n        document.title = \"May the force be with you\"\r\n    }\r\n\r\n    getPlanets = async () => {\r\n        try{\r\n            var next = ''\r\n            var url = 'https://swapi.co/api/planets/?page=1'\r\n            var arrayPlanets = []\r\n            this.setState({loading: true},function () {\r\n                console.log(this.state.loading)\r\n            })\r\n            while (next != null) {\r\n                var response = await Axios.get(url)\r\n                next = response.data.next\r\n                url = next\r\n                for(let i = 0; i < response.data.results.length; i++){\r\n                    arrayPlanets.push(response.data.results[i])\r\n                }\r\n            }\r\n            this.setState({\r\n                planets: arrayPlanets,\r\n                numPlanets: response.data.count,\r\n                loading: false\r\n            },function () {\r\n                console.log(this.state.loading)\r\n            })\r\n            this.cardPlanet()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    next = () => {\r\n        this.setState({selectedIndex: Math.floor(Math.random() * this.state.numPlanets)}, function () {\r\n            this.cardPlanet()\r\n        })\r\n    }\r\n\r\n    cardPlanet = () => {\r\n         var plan = this.state.planets.filter((result, index, arr) => {\r\n             return arr.indexOf(result) === this.state.selectedIndex\r\n         })\r\n        this.setState({planet: plan})\r\n    }\r\n\r\n    checkLoading = () => {\r\n        const {planet} = this.state\r\n        if (this.state.loading === true) {\r\n            return <LoadSpinner/>\r\n        } else {\r\n            return <div><CardPlanet planet={planet}/><Button next={this.next}/></div>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.checkLoading()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Planet from './components/Planet'\r\n\r\nconst elemento = document.getElementById('root')\r\nReactDOM.render(\r\n    <div>\r\n        <Planet/>\r\n    </div>,\r\n    elemento)\r\n"],"sourceRoot":""}